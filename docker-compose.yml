# SPDX-FileCopyrightText: 2024 PNED G.I.E.
#
# SPDX-License-Identifier: Apache-2.0

version: "3"

volumes:
  ckan_storage:
    driver: local
  pg_data:
    driver: local
  solr_data:
    driver: local

services:
  nginx:
    build:
      context: nginx/
      dockerfile: Dockerfile
    depends_on:
      frontend:
        condition: service_healthy
    environment:
      - ID_HOSTNAME
      - CATALOGUE_HOSTNAME
      - DISCOVER_HOSTNAME
    ports:
      - 80:80

  frontend:
    image: ghcr.io/genomicdatainfrastructure/gdi-userportal-frontend:${FRONTEND_IMAGE_VERSION}
    depends_on:
      ckan:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - BACKEND_URL
      - IDENTITY_SERVER_URL
      - IDENTITY_SERVER_CLIENT_ID
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]

  ckan:
    image: ghcr.io/genomicdatainfrastructure/gdi-userportal-ckan-docker:${CKAN_IMAGE_VERSION}
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      solr:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    volumes:
      - ckan_storage:/var/lib/ckan
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:5000"]
    extra_hosts:
      - "id.local.onemilliongenomes.eu:host-gateway"

  postgres:
    build:
      context: postgresql/
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - CKAN_DB_USER
      - CKAN_DB_PASSWORD
      - CKAN_DB
      - KC_DB_USERNAME
      - KC_DB_PASSWORD
      - KC_DB_NAME
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]

  solr:
    image: ckan/ckan-solr:${SOLR_IMAGE_VERSION}
    volumes:
      - solr_data:/var/solr
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8983/solr/"]

  redis:
    image: redis:${REDIS_VERSION}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-e", "QUIT"]

  keycloak:
    build:
      context: keycloak/
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - KC_DB_URL
      - KC_DB_USERNAME
      - KC_DB_PASSWORD
      - KEYCLOAK_ADMIN
      - KEYCLOAK_ADMIN_PASSWORD
      - KC_HOSTNAME
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import:ro
    healthcheck:
      test: ["CMD", "curl", "-o", "/dev/null", http://localhost:8080/health/ready"]
