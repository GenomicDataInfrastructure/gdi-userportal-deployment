# SPDX-FileCopyrightText: 2024 PNED G.I.E.
#
# SPDX-License-Identifier: Apache-2.0

version: "3"

volumes:
  ckan_storage:
    driver: local
  pg_data:
    driver: local
  solr_data:
    driver: local

services:
  nginx:
    build:
      context: nginx/
      dockerfile: Dockerfile
    depends_on:
      frontend:
        condition: service_healthy
      keycloak:
        condition: service_healthy
      rems:
        condition: service_healthy
      kong:
        condition: service_healthy
      ckan:
        condition: service_healthy
    environment:
      - ID_HOSTNAME
      - CATALOGUE_HOSTNAME
      - DISCOVER_HOSTNAME
    ports:
      - 80:80

  frontend:
    image: ghcr.io/genomicdatainfrastructure/gdi-userportal-frontend:${FRONTEND_IMAGE_VERSION}
    depends_on:
      kong:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - BACKEND_URL
      - IDENTITY_SERVER_URL
      - IDENTITY_SERVER_HOST_URL
      - IDENTITY_SERVER_CLIENT_ID
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]

  ckan:
    image: ghcr.io/genomicdatainfrastructure/gdi-userportal-ckan-docker:${CKAN_IMAGE_VERSION}
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      solr:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    volumes:
      - ckan_storage:/var/lib/ckan
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:5000"]
    extra_hosts:
      - "id.local.onemilliongenomes.eu:host-gateway"

  postgres:
    build:
      context: postgresql/
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - CKAN_DB_USER
      - CKAN_DB_PASSWORD
      - CKAN_DB
      - KC_DB_USERNAME
      - KC_DB_PASSWORD
      - KC_DB_NAME
      - REMS_DB_USER
      - REMS_DB_PASSWORD
      - REMS_DB
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]

  solr:
    image: ckan/ckan-solr:${SOLR_IMAGE_VERSION}
    volumes:
      - solr_data:/var/solr
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8983/solr/"]

  redis:
    image: redis:${REDIS_VERSION}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-e", "QUIT"]

  keycloak:
    build:
      context: keycloak/
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - KC_DB_URL
      - KC_DB_USERNAME
      - KC_DB_PASSWORD
      - KEYCLOAK_ADMIN
      - KEYCLOAK_ADMIN_PASSWORD
      - KC_HOSTNAME
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import:ro
    healthcheck:
      test: ["CMD", "curl", "-o", "/dev/null", http://localhost:8080/health/ready"]

  kong:
    image: kong/kong-gateway:${KONG_IMAGE_VERSION}
    restart: unless-stopped
    depends_on:
      ckan:
        condition: service_healthy
      access-management-service:
        condition: service_healthy
    environment:
      KONG_LOG_LEVEL: debug
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /etc/kong/kong.yml
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_PATH: /manager
      KONG_ADMIN_GUI_URL: http://localhost:8002/manager
      KONG_PLUGINS: bundled
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 1s
      timeout: 10s
      retries: 3
    volumes:
      - ./kong/kong.yml:/etc/kong/kong.yml

  access-management-service:
    image: ghcr.io/genomicdatainfrastructure/gdi-userportal-access-management-service:${ACCESS_MANAGEMENT_SERVICE_IMAGE_VERSION}
    restart: unless-stopped
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-o", "/dev/null", http://localhost:8080/q/health"]

  rems:
    image: cscfi/rems:${REMS_IMAGE_VERSION}
    environment:
      PORT: 3000
      DATABASE_URL: ${REMS_DATABASE_URL}
      PUBLIC_URL: http://${DAAM_HOSTNAME}/
    volumes:
      - ./rems/config.edn:/rems/config/config.edn
      - ./rems/styles.css:/rems/theme/styles.css
      - ./rems/theme.edn:/rems/theme/theme.edn
      - ./rems/en.edn:/rems/theme/extra-translations/en.edn
      - ./rems/logo_medium.png:/rems/theme/public/img/logo_medium.png
      - ./rems/logo_small.png:/rems/theme/public/img/logo_small.png
      - ./rems/ls_login.png:/rems/theme/public/img/ls_login.png
      - ./rems/private-key.jwk:/rems/keys/private-key.jwk
      - ./rems/public-key.jwk:/rems/keys/public-key.jwk
    depends_on:
      keycloak:
        condition: service_healthy
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:3000/api/health"]
