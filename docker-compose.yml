# SPDX-FileCopyrightText: 2024 PNED G.I.E.
#
# SPDX-License-Identifier: Apache-2.0
volumes:
  ckan_storage:
    driver: local
  pg_data_17:
    driver: local
  solr_data:
    driver: local
  pip_cache:
    driver: local
  site_packages:
    driver: local

services:
  nginx:
    build:
      context: nginx/
      dockerfile: Dockerfile
    depends_on:
      frontend:
        condition: service_healthy
      kong:
        condition: service_healthy
      ckan:
        condition: service_healthy
      rems:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - 80:80

  frontend:
    image: ghcr.io/genomicdatainfrastructure/gdi-userportal-frontend:main
    depends_on:
      kong:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env
      - .env.secrets
    healthcheck:
      test:
        ["CMD", "curl", "-o", "/dev/null", "http://localhost:3000/api/health"]

  ckan:
    image: ghcr.io/genomicdatainfrastructure/gdi-userportal-ckan-docker:main
    env_file:
      - .env
      - .env.secrets
    depends_on:
      postgres:
        condition: service_healthy
      solr:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    volumes:
      - ckan_storage:/var/lib/ckan
      - pip_cache:/root/.cache/pip
      - site_packages:/usr/lib/python3.10/site-packages
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:5000"]
      interval: 5s
      retries: 3
      start_period: 60s

  postgres:
    build:
      context: postgresql17/
    env_file:
      - .env
      - .env.secrets
    volumes:
      - pg_data_17:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test:
        ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]

  solr:
    image: ghcr.io/genomicdatainfrastructure/gdi-userportal-solr:main
    volumes:
      - solr_data:/var/solr
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8983/solr/"]

  redis:
    image: redis:6.2.16
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-e", "QUIT"]

  keycloak:
    build:
      context: keycloak/
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env.keycloak
      - .env.secrets
    ports:
      - 8080:8080
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import:ro
    healthcheck:
      test:
        ["CMD", "curl", "-o", "/dev/null", "http://localhost:8080/health/ready"]
      interval: 5s
      retries: 3
      start_period: 60s

  kong:
    image: kong/kong-gateway:3.7.1.2
    restart: unless-stopped
    depends_on:
      dataset-discovery-service:
        condition: service_healthy
      access-management-service:
        condition: service_healthy
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "kong", "health"]
    volumes:
      - ./kong/kong.yml:/etc/kong/kong.yml

  access-management-service:
    image: ghcr.io/genomicdatainfrastructure/gdi-userportal-access-management-service:main
    restart: unless-stopped
    env_file:
      - .env
      - .env.secrets
    depends_on:
      keycloak:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-o", "/dev/null", "http://localhost:8080/q/health"]

  rems:
    image: cscfi/rems:v2.37
    env_file:
      - .env
      - .env.secrets
    volumes:
      - ./rems/config.edn:/rems/config/config.edn
      - ./rems/styles.css:/rems/theme/styles.css
      - ./rems/theme.edn:/rems/theme/theme.edn
      - ./rems/en.edn:/rems/theme/extra-translations/en.edn
      - ./rems/logo_medium.png:/rems/theme/public/img/logo_medium.png
      - ./rems/logo_small.png:/rems/theme/public/img/logo_small.png
      - ./rems/ls_login.png:/rems/theme/public/img/ls_login.png
      - ./rems/private-key.jwk:/rems/keys/private-key.jwk
      - ./rems/public-key.jwk:/rems/keys/public-key.jwk
    depends_on:
      keycloak:
        condition: service_healthy
    healthcheck:
      test:
        ["CMD", "wget", "-qO", "/dev/null", "http://localhost:3000/api/health"]

  synchronizer:
    image: ghcr.io/genomicdatainfrastructure/gdi-userportal-rems-synchronizer:main
    depends_on:
      rems:
        condition: service_healthy
      ckan:
        condition: service_healthy
    env_file:
      - .env

  dataset-discovery-service:
    image: ghcr.io/genomicdatainfrastructure/gdi-userportal-dataset-discovery-service:main
    restart: unless-stopped
    env_file:
      - .env
      - .env.secrets
    depends_on:
      keycloak:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-o", "/dev/null", "http://localhost:8080/q/health"]
